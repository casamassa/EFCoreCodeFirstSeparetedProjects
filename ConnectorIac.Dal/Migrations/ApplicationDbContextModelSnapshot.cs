// <auto-generated />
using System;
using ConnectorIac.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConnectorIac.Dal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConnectorIac.Bl.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Ean")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProductGroupId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductGroupId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "12547828",
                            CreatedAt = new DateTime(2021, 3, 9, 10, 5, 41, 142, DateTimeKind.Local).AddTicks(3788),
                            Description = "Produto 1",
                            Ean = "78554782447",
                            ExpirationDate = new DateTime(2021, 3, 9, 10, 5, 41, 142, DateTimeKind.Local).AddTicks(2781),
                            Price = 258m,
                            ProductGroupId = 1,
                            Status = true,
                            UpdatedAt = new DateTime(2021, 3, 9, 10, 5, 41, 142, DateTimeKind.Local).AddTicks(4277),
                            Volume = 254m,
                            Weight = 188m
                        },
                        new
                        {
                            Id = 2,
                            Code = "58712544",
                            CreatedAt = new DateTime(2021, 3, 9, 10, 5, 41, 142, DateTimeKind.Local).AddTicks(5283),
                            Description = "Produto 2",
                            Ean = "75547855547",
                            ExpirationDate = new DateTime(2021, 3, 9, 10, 5, 41, 142, DateTimeKind.Local).AddTicks(5261),
                            Price = 145m,
                            ProductGroupId = 2,
                            Status = true,
                            UpdatedAt = new DateTime(2021, 3, 9, 10, 5, 41, 142, DateTimeKind.Local).AddTicks(5292),
                            Volume = 180m,
                            Weight = 258m
                        });
                });

            modelBuilder.Entity("ConnectorIac.Bl.Models.ProductGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 3, 9, 10, 5, 41, 138, DateTimeKind.Local).AddTicks(9210),
                            Description = "Almoxarifado",
                            Status = true,
                            UpdatedAt = new DateTime(2021, 3, 9, 10, 5, 41, 140, DateTimeKind.Local).AddTicks(1718)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 3, 9, 10, 5, 41, 140, DateTimeKind.Local).AddTicks(2377),
                            Description = "Armazém",
                            Status = true,
                            UpdatedAt = new DateTime(2021, 3, 9, 10, 5, 41, 140, DateTimeKind.Local).AddTicks(2390)
                        });
                });

            modelBuilder.Entity("ConnectorIac.Bl.Models.Product", b =>
                {
                    b.HasOne("ConnectorIac.Bl.Models.ProductGroup", "ProductGroup")
                        .WithMany("Products")
                        .HasForeignKey("ProductGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductGroup");
                });

            modelBuilder.Entity("ConnectorIac.Bl.Models.ProductGroup", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
